package net.hinyari.gohancountdown;

import com.intellij.uiDesigner.core.Spacer;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;

public class GohanCountDown {
    private JFrame jFrame;

    private JPanel panel1;
    private JLabel label_unt2018ss;
    private JLabel label_unt2018h;
    private JLabel label_unt2018m;
    private JLabel label_unt2018s;
    private JLabel label_from2017ss;
    private JLabel label_unt2019ss;
    private JLabel label_server;
    private JLabel label_appstatus;
    private JLabel label_nowtime;
    private JLabel label_yearsfrom;

    public static GohanCountDown instance;
    private static CountDownTimer countDownTimer;


    public static void main(String[] args)
    {
        instance = new GohanCountDown();
        countDownTimer = new CountDownTimer();
    }

    public GohanCountDown()
    {
        jFrame = new JFrame();
        jFrame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        jFrame.setVisible(true);
        jFrame.setContentPane(panel1);
        jFrame.setSize(360, 510);
        jFrame.setResizable(false);
        jFrame.setAlwaysOnTop(true);
        //this.setUndecorated(true);
        jFrame.addComponentListener(new ComponentAdapter()
        {
            @Override
            public void componentResized(ComponentEvent e)
            {
                jFrame.setTitle("GohanCountDown(" + e.getComponent().getWidth() + "×" + e.getComponent().getHeight() + ")");
            }
        });

    }


    public JLabel getLabel_unt2018ss()
    {
        return label_unt2018ss;
    }

    public JLabel getLabel_unt2018h()
    {
        return label_unt2018h;
    }

    public JLabel getLabel_unt2018m()
    {
        return label_unt2018m;
    }

    public JLabel getLabel_unt2018s()
    {
        return label_unt2018s;
    }

    public JLabel getLabel_from2017ss()
    {
        return label_from2017ss;
    }

    public JLabel getLabel_unt2019ss()
    {
        return label_unt2019ss;
    }

    public JLabel getLabel_server()
    {
        return label_server;
    }

    public JLabel getLabel_appstatus()
    {
        return label_appstatus;
    }

    public JLabel getLabel_nowtime()
    {
        return label_nowtime;
    }

    public JLabel getLabel_yearsfrom()
    {
        return label_yearsfrom;
    }


    {
        // GUI initializer generated by IntelliJ IDEA GUI Designer
        // >>> IMPORTANT!! <<<
        // DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$()
    {
        panel1 = new JPanel();
        panel1.setLayout(new FormLayout("left:5dlu:noGrow,fill:max(d;4px):noGrow,fill:89px:grow,fill:max(d;4px):noGrow,fill:m:noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,left:m:noGrow,left:4dlu:noGrow,fill:36px:noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow", "top:4dlu:noGrow,center:30px:noGrow,top:5dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:32px:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:5dlu:noGrow,center:m:grow,center:32px:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:d:grow"));
        final Spacer spacer1 = new Spacer();
        CellConstraints cc = new CellConstraints();
        panel1.add(spacer1, cc.xy(1, 2, CellConstraints.FILL, CellConstraints.DEFAULT));
        final Spacer spacer2 = new Spacer();
        panel1.add(spacer2, cc.xy(14, 2, CellConstraints.FILL, CellConstraints.DEFAULT));
        label_unt2018s = new JLabel();
        label_unt2018s.setEnabled(true);
        Font label_unt2018sFont = this.$$$getFont$$$(null, -1, 28, label_unt2018s.getFont());
        if (label_unt2018sFont != null)
            label_unt2018s.setFont(label_unt2018sFont);
        label_unt2018s.setHorizontalAlignment(4);
        label_unt2018s.setText("00");
        panel1.add(label_unt2018s, cc.xy(11, 15));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, -1, 28, label1.getFont());
        if (label1Font != null)
            label1.setFont(label1Font);
        label1.setText("秒");
        panel1.add(label1, cc.xy(13, 15));
        final JLabel label2 = new JLabel();
        Font label2Font = this.$$$getFont$$$(null, -1, 28, label2.getFont());
        if (label2Font != null)
            label2.setFont(label2Font);
        label2.setText("秒");
        panel1.add(label2, cc.xy(13, 13));
        label_unt2018h = new JLabel();
        Font label_unt2018hFont = this.$$$getFont$$$(null, -1, 28, label_unt2018h.getFont());
        if (label_unt2018hFont != null)
            label_unt2018h.setFont(label_unt2018hFont);
        label_unt2018h.setHorizontalAlignment(4);
        label_unt2018h.setText("0");
        panel1.add(label_unt2018h, cc.xy(3, 15));
        label_unt2018m = new JLabel();
        Font label_unt2018mFont = this.$$$getFont$$$(null, -1, 28, label_unt2018m.getFont());
        if (label_unt2018mFont != null)
            label_unt2018m.setFont(label_unt2018mFont);
        label_unt2018m.setHorizontalAlignment(4);
        label_unt2018m.setText("00");
        panel1.add(label_unt2018m, cc.xy(7, 15));
        final JLabel label3 = new JLabel();
        Font label3Font = this.$$$getFont$$$(null, -1, 28, label3.getFont());
        if (label3Font != null)
            label3.setFont(label3Font);
        label3.setText("分");
        panel1.add(label3, cc.xy(9, 15));
        final JLabel label4 = new JLabel();
        Font label4Font = this.$$$getFont$$$(null, -1, 24, label4.getFont());
        if (label4Font != null)
            label4.setFont(label4Font);
        label4.setText("2018年まであと");
        panel1.add(label4, cc.xyw(2, 12, 12));
        label_unt2018ss = new JLabel();
        Font label_unt2018ssFont = this.$$$getFont$$$(null, -1, 28, label_unt2018ss.getFont());
        if (label_unt2018ssFont != null)
            label_unt2018ss.setFont(label_unt2018ssFont);
        label_unt2018ss.setHorizontalAlignment(4);
        label_unt2018ss.setText("0");
        panel1.add(label_unt2018ss, cc.xyw(3, 13, 9));
        final JLabel label5 = new JLabel();
        Font label5Font = this.$$$getFont$$$(null, -1, 28, label5.getFont());
        if (label5Font != null)
            label5.setFont(label5Font);
        label5.setText("時間");
        panel1.add(label5, cc.xy(5, 15));
        final JLabel label6 = new JLabel();
        Font label6Font = this.$$$getFont$$$(null, -1, 24, label6.getFont());
        if (label6Font != null)
            label6.setFont(label6Font);
        label6.setHorizontalAlignment(0);
        label6.setText("GohanCountDown for 2018");
        panel1.add(label6, cc.xyw(3, 2, 11));
        label_yearsfrom = new JLabel();
        Font label_yearsfromFont = this.$$$getFont$$$(null, -1, 24, label_yearsfrom.getFont());
        if (label_yearsfromFont != null)
            label_yearsfrom.setFont(label_yearsfromFont);
        label_yearsfrom.setText("2017年からの経過時間");
        panel1.add(label_yearsfrom, cc.xyw(3, 18, 12));
        label_from2017ss = new JLabel();
        label_from2017ss.setEnabled(true);
        Font label_from2017ssFont = this.$$$getFont$$$(null, -1, 28, label_from2017ss.getFont());
        if (label_from2017ssFont != null)
            label_from2017ss.setFont(label_from2017ssFont);
        label_from2017ss.setHorizontalAlignment(4);
        label_from2017ss.setText("0");
        panel1.add(label_from2017ss, cc.xyw(3, 20, 9));
        final JLabel label7 = new JLabel();
        Font label7Font = this.$$$getFont$$$(null, -1, 28, label7.getFont());
        if (label7Font != null)
            label7.setFont(label7Font);
        label7.setText("秒");
        panel1.add(label7, cc.xy(13, 20));
        final JSeparator separator1 = new JSeparator();
        panel1.add(separator1, cc.xyw(3, 17, 11, CellConstraints.FILL, CellConstraints.FILL));
        final JLabel label8 = new JLabel();
        Font label8Font = this.$$$getFont$$$(null, -1, 24, label8.getFont());
        if (label8Font != null)
            label8.setFont(label8Font);
        label8.setText("2019年まであと");
        panel1.add(label8, cc.xyw(3, 22, 11));
        label_unt2019ss = new JLabel();
        Font label_unt2019ssFont = this.$$$getFont$$$(null, -1, 28, label_unt2019ss.getFont());
        if (label_unt2019ssFont != null)
            label_unt2019ss.setFont(label_unt2019ssFont);
        label_unt2019ss.setHorizontalAlignment(4);
        label_unt2019ss.setText("0");
        panel1.add(label_unt2019ss, cc.xyw(3, 24, 9));
        final JLabel label9 = new JLabel();
        Font label9Font = this.$$$getFont$$$(null, -1, 28, label9.getFont());
        if (label9Font != null)
            label9.setFont(label9Font);
        label9.setText("秒");
        panel1.add(label9, cc.xy(13, 24));
        final JLabel label10 = new JLabel();
        Font label10Font = this.$$$getFont$$$(null, -1, 24, label10.getFont());
        if (label10Font != null)
            label10.setFont(label10Font);
        label10.setText("現在時刻");
        panel1.add(label10, cc.xyw(2, 8, 12));
        label_nowtime = new JLabel();
        Font label_nowtimeFont = this.$$$getFont$$$(null, -1, 28, label_nowtime.getFont());
        if (label_nowtimeFont != null)
            label_nowtime.setFont(label_nowtimeFont);
        label_nowtime.setHorizontalAlignment(4);
        label_nowtime.setHorizontalTextPosition(10);
        label_nowtime.setText("0000/00/00 00:00:00");
        panel1.add(label_nowtime, cc.xyw(3, 10, 11));
        label_server = new JLabel();
        label_server.setText("");
        panel1.add(label_server, cc.xyw(5, 4, 9));
        label_appstatus = new JLabel();
        label_appstatus.setText("");
        panel1.add(label_appstatus, cc.xyw(5, 6, 9));
        final JLabel label11 = new JLabel();
        label11.setHorizontalAlignment(4);
        label11.setText("接続中のサーバ");
        panel1.add(label11, cc.xy(3, 4));
        final JLabel label12 = new JLabel();
        label12.setHorizontalAlignment(4);
        label12.setHorizontalTextPosition(10);
        label12.setText("接続状況");
        panel1.add(label12, cc.xy(3, 6));
        final Spacer spacer3 = new Spacer();
        panel1.add(spacer3, cc.xy(5, 26, CellConstraints.DEFAULT, CellConstraints.FILL));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont)
    {
        if (currentFont == null)
            return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$()
    {
        return panel1;
    }
}
